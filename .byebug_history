continue
Service.all
continue
params[:order][0.to_s].to_i
params[:order]["0"].to_i
params[:order]["0"]
params[:order][0]
params[:order]
continue
params[:order]
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
rf
@resource_driver.columns_hash[rf.column_name].type
continue
@resource_driver.columns_hash[rf.column_name].type
continue
@resource_driver.columns_hash[rf.column_name].type
continue
@resource_driver.columns_hash[rf.column_name].type
continue
@resource_driver.columns_hash[rf.column_name].type
@resource_driver.columns_hash[rf.column_name]
@resource_driver.columns_hash
rf
continue
@resource_fields
rf
@resource_driver.columns_hash
@resource_driver
continue
block
args
name
nname
continue
!reload
where(machine_name: block_name)
block_name
exit
where(machine_name: 'introduction')
find_by(machine_name: 'introduction')
self
page
continue
@b.blocks
@b.block
@b.build_block
@b
@b = block_type.create!
b
b = block_type.create!
block_type
continue
reload!
x.valid?
x.valid
x = BlockText.new
BlockText.new
BlockText.create!
Block
block_type
continue
find_by(machine_name: name)
continue
find_by(machine_name: name)
continue
exit
finexit
name
continue
exit
exi
where(machine_name: name)
find_by(machine_name: name)
this
scope
self
name = name.underscore.tr(' ', '_')
'HelloHow    Are'.underscore.squish.tr(' ', '_')
'HelloHow    Are'.underscore..squish.tr(' ', '_')
'HelloHow    Are'.underscore.tr(' ', '_')
name.underscore.tr(' ', '_')
'HelloYou Today'.underscore
'HelloYou'.underscore
name
'Hello    You'.squish.underscore
'Hello    You'.underscore
'Hello    You'.squish
'Hello    You'.camelize
Block.all
name
continue
block.specialised_block
block
continue
"hi".parameterize
"hi".paramatize
self
continue
block_type
block_tye
continue
'block_text'.camelize.constantize
'BlockText'.constantize
'block_text'.constantize
block_type.to_s.constantize
block_type.constantize
block_type
block_tye
block_name
continue
@page.layout
continue
@page.layout
@page
@age
Rails.configuration.x.layout_blocks['home']
Rails.configuration.x.layout_blocks['home;]
Rails.configuration.x.layout_blocks
Rails.configuration.x.blocks_layout
Rails.configuration.x.block_layout
Rails.configuration.x
Rails.configuration
continue
@create_redirect
continue
@create_redirect
continue
''.nil?
nil.nil?
nil.empty?
''.empty?
phone
email
continue
Blog.by_month[date]
Blog.by_month
continue
Blog.by_month.where()
Blog.by_month[x]
Blog.by_month
x.beginning_of_month
x
continue
x.beginning_of_month
x = DateTime.strptime(date, "%B %y")
Blog.by_month[y.first.beginning_of_month]
x
y.first.beginning_of_month
y.first
y
Blog.by_month[y.first]
y.first
y
y = Blog.by_month.map {|k, v| k}
y
y = Blog.by_month.first.map {|k, v| k}
Blog.by_month.first.map {|k, v| k}
Blog.by_month.first
Blog.by_month[x]
Blog.by_month[x
x = DateTime.strptime(date, "%B %y")
DateTime.strptime(date, "%B %y")
Blog.by_month
Date.strptime(date, "%B %y")
date
Date.strptime(date, "%B %y")
Date.strptime(date, "%B %Y")
date
Date.strptime(date, "%B %y")
Date.strptime(date)
DateTime.parse(date)
DateTime.parse(date, "%B %y")
date
continue
date
Date
DateTime.parse(date, "%B %y")
DateTime.parse(date, "%B %Y")
continue
date
DateTime.parse(date)
DateTime.parse(date
Time.new date
Date.new date
date
Blog.by_month.first.date
Blog.by_month.first.data
Blog.by_month.first.key
Blog.by_month.first
Blog.by_month[date]
Blog.by_month [date]
Blog.by_month [data]
date
Blog.by_month
continue
blog.body
continue
blog.body
continue
params
continue
params
continue
@blog.banner.url
@blog.banner
@blog.banner.nil?
@blog.banner.exists?
@blog.banner
continue
params[:tag]
params
continue
@blog
continue
@blog
continue
@blog
continue
params[:id]
@resource
@blogs
@blog
continue
@resources
@resource
continue
@resource
@blog
continue
@blog
continue
@blog
continue
@blog
@blogs
@blog
set_friendly_vars
continue
params[:id]
params
continue
tag.blogs.where(id: Blog.second.id).count
tag.blogs.where(id: Blog.first.id).count
tag.blogs.where(id: Blog.first.id)
